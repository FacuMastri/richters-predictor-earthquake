LightGBM

Test = 0.7615, train = 0.8010, DD = 0.7440. Ventaja que entrena rapidisimo.

Test = 0.7614, train=0.7954, DD = 0.7445. Le agregue 5 neuronas mas a la red y mejora un poco.

Test = 0.7619, train=0.7834, DD=0.7446. Cambie learning_rate a 0.05 y estimadores a 530.





---------------------------------
RandomForest

Con todas las features (90) (incluso con los geo level) da 0.8120 pero en DD 0.6933 - Overfittea a lo loco

Con todas las features menos los legal_ownership y has_secondary_use (incluso con los geo level) da 0.8031 en test (con 0.7605 en train) pero en DD 0.7009 - Overfittea menos que antes

Con todas las features menos los legal_ownership, has_secondary_use y geo_level_id da 0.8018 pero en DD 0.6986 - No mejora nada, da menos overfit en train pero peor en test

Con todas las features menos los legal_ownership y has_secondary_use (incluso con los geo level). Agrego limpieza de datos. Da test = 0.7566, train = 0.8029, DD = 0.7196 - Overfittea bastante todavia pero mejor score en general.

Con todas las features menos los legal_ownership, has_secondary_use, geo level reemplazado por embedding (aca se nos filtró columna 'index'). Da test = 0.7603, train = 0.8058, DD = 0.7441. Bastante bien

Con todas las features menos los legal_ownership, has_secondary_use, geo level reemplazado por embedding. Agregué algunas features basdas en los ids.  Da test = 0.7598, train = 0.8040, DD = 0.7037. Empeora bastante con las nuevas features respecto a la prueba anterior.
-
Con todas las features menos los legal_ownership, has_secondary_use, geo level reemplazado por embedding. Da test = 0.7572, train = 0.8058, DD = 0.7439. Ya no es random el resultado, lo podemos hallar consistentemente :D

Igual la entrada anterior, pero con las features de las IDs (relacion de IDs). Da test = 0.7562, train = 0.8071, DD = 0.7437. Vemos que el score en test y DD ya se asemejan bastante asi que lo podemos tomar como punto de partida para NO tener que revolear submits.

Igual la entrada anterior, pero con las features de las IDs (cantidad por geo ID). Da test = 0.7565, train = 0.8058, DD = 0.7426. Vemos que el score en test y DD ya se asemejan bastante asi que lo podemos tomar como punto de partida para NO tener que revolear submits.

Con todas las features menos has_secondary_use (aca deje las legal ownership), geo level reemplazado por embedding. Da test = 0.7566, train = 0.8060, DD = 0.7438.

Con todas las features menos los legal_ownership, has_secondary_use. 1000 estimadores. Da test = 0.7568, train = 0.8059, DD = 0.7441.

Con todas las features menos los legal_ownership, has_secondary_use y algunos de estructuras. 1000 estimadores. Da test = 0.7567, train = 0.8065, DD = 0.7441.










---------------------------------
XGBoost

Con todas las features menos los legal_ownership y has_secondary_use. Da test = 0.7613, train = 0.7970, DD = 0.7444

Con todas las features menos los legal_ownership, has_secondary_use, sin las probas del lvl 3. Da test = 0.7446, DD = 0.7428

Con todas las features menos los legal_ownership, has_secondary_use, sin las geo level embedded. Da test = 0.7604, DD = 0.7433

Features menos legal_ownership, has_secondary_use, plan_configuration, altura_al_cuadrado, construida_antes_de_codigo, anio_edificacion, construida_antes_de_codigo. Da test = 0.7619, train = 0.7966, DD = 0.7443

Con las nuevas features de la red neuronal. Da test=0.7611, train=0.7983, DD=0.7448







---------------------------------